import pandas as pd

door = pd.read_csv("/home/zaiying/A-Pastani/data/doorR2_converted.csv")

pathdata = [
    ["JR北/北海道旅客鉄道北海道新幹線", 2, 4],
    ["JR東/東日本旅客鉄道東北新幹線", 5, 12],
    ["JR東/東日本旅客鉄道上越新幹線", 13, 13],
    ["JR東/東日本旅客鉄道北陸新幹線", 14, 19],
    ["JR東/東日本旅客鉄道山手線", 20, 46],
    ["JR東/東日本旅客鉄道東北本線", 47, 71],
    ["JR東/東日本旅客鉄道総武本線", 72, 72],
    ["JR東/東日本旅客鉄道横浜線", 73, 73],
    ["JR東/東日本旅客鉄道八高線", 74, 74],
    ["JR東/東日本旅客鉄道成田線", 75, 76],
    ["JR東海/東海旅客鉄道東海道新幹線", 77, 83],
    ["JR西日本/西日本旅客鉄道北陸新幹線", 84, 88],
    ["JR西日本/西日本旅客鉄道山陽新幹線", 89, 90],
    ["JR西日本/西日本旅客鉄道JR東西線", 91, 93],
    ["JR西日本/西日本旅客鉄道東海道線", 94, 98],
    ["JR西日本/西日本旅客鉄道山陽線", 99, 100],
    ["JR九州/九州旅客鉄道九州新幹線", 101, 111],
    ["JR九州/九州旅客鉄道筑肥線", 112, 112],
    ["東武鉄道/東武鉄道東武東上本線", 113, 117],
    ["東武鉄道/東武鉄道東武野田線", 118, 119],
    ["西武鉄道/西武鉄道西武池袋線", 120, 121],
    ["西武鉄道/西武鉄道西武新宿線", 122, 122],
    ["京成電鉄/京成電鉄京成本線", 123, 124],
    ["京王電鉄/京王電鉄京王線", 125, 128],
    ["NONE", 129, 129],
    ["京王電鉄/京王電鉄京王線", 130, 130],
    ["京王電鉄/京王電鉄京王井の頭線", 131, 132],
    ["小田急電鉄/小田急電鉄小田急小田原線", 133, 139],
    ["東急電鉄/東急電鉄東急目黒線", 140, 152],
    ["東急電鉄/東急電鉄東急大井町線", 153, 168],
    ["東急電鉄/東急電鉄東急東横線", 169, 189],
    ["東急電鉄/東急電鉄東急田園都市線", 190, 216],
    ["京浜急行電鉄/京浜急行電鉄京急空港線", 217, 219],
    # 219例外
    ["京浜急行電鉄/京浜急行電鉄京急本線", 220, 221],
    ["相模鉄道/相模鉄道相鉄本線", 222, 222],
    ["相模鉄道/相模鉄道相鉄新横浜線", 223, 223],
    ["名古屋鉄道/名古屋鉄道名鉄小牧線", 224, 224],
    ["名古屋鉄道/名古屋鉄道名鉄空港線", 225, 225],
    ["近畿日本鉄道/近畿日本鉄道近鉄南大阪線", 226, 226],
    ["阪急電鉄/阪急電鉄阪急宝塚本線", 227, 227],
    ["南海電気鉄道/南海電気鉄道南海高野線", 228, 228],
    ["東京臨海高速鉄道/東京臨海高速鉄道りんかい線", 229, 230],
    ["横浜高速鉄道/横浜高速鉄道みなとみらい21線", 231, 235],
    ["埼玉高速鉄道/埼玉高速鉄道埼玉高速鉄道線", 236, 243],
    ["北大阪急行電鉄/北大阪急行電鉄南北線", 244, 246],
    ["首都圏新都市鉄道/首都圏新都市鉄道つくばエクスプレス", 247, 266],
    ["立山黒部貫光/立山黒部貫光鋼索線", 267, 267],
    ["名古屋臨海高速鉄道/名古屋臨海高速鉄道あおなみ線", 268, 278],
    ["札幌市交通局/札幌市交通局東西線", 279, 297],
    ["札幌市交通局/札幌市交通局南北線", 298, 313],
    ["札幌市交通局/札幌市交通局東豊線", 314, 327],
    ["仙台市交通局/仙台市交通局南北線", 328, 344],
    ["仙台市交通局/仙台市交通局東西線", 345, 357],
    ["東京メトロ/東京地下鉄千代田線", 358, 377],
    ["東京メトロ/東京地下鉄南北線", 378, 396],
    ["東京メトロ/東京地下鉄丸ノ内線", 397, 421],
    ["東京メトロ/東京地下鉄丸ノ内線分岐線", 422, 424],
    ["東京メトロ/東京地下鉄副都心線", 425, 440],
    ["東京メトロ/東京地下鉄有楽町線", 441, 464],
    ["東京メトロ/東京地下鉄銀座線", 465, 482],
    ["東京メトロ/東京地下鉄東西線", 483, 490],
    ["東京メトロ/東京地下鉄半蔵門線", 491, 496],
    ["東京都交通局/東京都交通局浅草線", 497, 500],
    ["東京都交通局/東京都交通局三田線", 501, 527],
    ["東京都交通局/東京都交通局大江戸線", 528, 565],
    ["東京都交通局/東京都交通局新宿線", 566, 586],
    ["横浜市交通局/横浜市交通局3号線", 587, 602],
    ["横浜市交通局/横浜市交通局1号線", 603, 618],
    # ブルーラインやばい、1号線は関内行こう、3号線はあざみ野から関内
    ["横浜市交通局/横浜市交通局グリーンライン", 619, 628],
    ["名古屋市交通局/名古屋市交通局上飯田線", 629, 630],
    ["名古屋市交通局/名古屋市交通局桜通線", 631, 651],
    ["名古屋市交通局/名古屋市交通局東山線", 652, 673],
    ["京都市交通局/京都市交通局烏丸線", 674, 676],
    ["京都市交通局/京都市交通局東西線", 677, 693],
    ["大阪市高速電気軌道/大阪市高速電気軌道今里筋線", 694, 704],
    ["大阪市高速電気軌道/大阪市高速電気軌道長堀鶴見緑地線", 705, 721],
    ["大阪市高速電気軌道/大阪市高速電気軌道千日前線", 722, 735],
    # 736-738ない
    ["NONE", 736, 738],
    ["大阪市高速電気軌道/大阪市高速電気軌道堺筋線", 739, 739],
    # 740例外、両方
    ["神戸市交通局/神戸市交通局西神線", 740, 740],
    ["福岡市交通局/福岡市交通局空港線", 741, 753],
    ["福岡市交通局/福岡市交通局箱崎線", 754, 760],
    ["福岡市交通局/福岡市交通局七隈線", 761, 776],
    ["東京モノレール/東京モノレール東京モノレール羽田線", 777, 787],
    ["ゆりかもめ/ゆりかもめ東京臨海新交通臨海線", 788, 803],
    ["東京都交通局/東京都交通局日暮里・舎人ライナー", 804, 816],
    ["多摩都市モノレール/多摩都市モノレール多摩都市モノレール線", 817, 835],
    ["舞浜リゾートライン/舞浜リゾートラインディズニーリゾートライン", 836, 839],
    ["横浜シーサイドライン/横浜シーサイドライン金沢シーサイドライン", 840, 853],
    ["愛知高速鉄道/愛知高速交通東部丘陵線", 854, 862],
    ["大阪市高速電気軌道/大阪市高速電気軌道南港ポートタウン線", 863, 872],
    ["大阪モノレール/大阪モノレール大阪モノレール線", 873, 879],
    ["大阪モノレール/大阪モノレール国際文化公園都市モノレール線", 880, 880],
    ["神戸新交通/神戸新交通ポートアイランド線", 881, 892],
    ["神戸新交通/神戸新交通六甲アイランド線", 893, 898],
    ["スカイレールサービス/スカイレールサービス広島短距離交通瀬野線", 899, 901],
    ["広島高速鉄道/広島高速交通広島新交通1号線", 902, 923],
    ["沖縄都市モノレール/沖縄都市モノレール沖縄都市モノレール線", 924, 942],
]

path = ["" for _ in range(len(door))]

for i in range(len(pathdata)):
    if pathdata[i][0] != "NONE":
        for j in range(pathdata[i][1] - 2, pathdata[i][2] - 1):
            path[j] = (
                "/home/zaiying/A-Pastani/data/"
                + pathdata[i][0]
                + "_addRailname.geojson"
            )
    else:
        for j in range(pathdata[i][1] - 2, pathdata[i][2] - 1):
            path[j] = pathdata[i][0]

door["path"] = path
door.to_csv("doorR2_addPath.csv")
